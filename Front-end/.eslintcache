[{"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\serviceWorker.js":"2","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\App.js":"3","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\Auth\\Forms\\Otp\\Otp.js":"4","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\Auth\\Forms\\Login\\Login.js":"5","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\Auth\\Forms\\ForgotPassword\\EmailVerify.js":"6","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\Auth\\Forms\\Signup\\Signup.js":"7","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\Auth\\Forms\\ForgotPassword\\ForgotPassOtp.js":"8","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\Auth\\Forms\\ResetPassword\\ResetPassword.js":"9","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Cart\\Cart.js":"10","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Teacher\\TeacherPage.js":"11","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Teacher\\TeacherVideos.js":"12","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\HomePage\\Preference.js":"13","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\HomePage\\Homepage.js":"14","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Teacher\\TeacherHomepage\\TeacherEdit.js":"15","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Teacher\\TeacherHomepage\\TeacherHomepage.js":"16","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\CoursePage\\CoursePage.js":"17","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\Auth\\Forms\\alert.js":"18","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Cart\\CartCard.js":"19","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Cart\\EmptyCart.js":"20","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Teacher\\TinputFields.js":"21","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\HomePage\\Recommendation.js":"22","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\HomePage\\CourseTitle.js":"23","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Teacher\\TeacherTittle.js":"24","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Teacher\\CKEditor.js":"25","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\ApiServices\\axiosUrl.js":"26","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Teacher\\TeacherHomepage\\TeacherCard.js":"27","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Teacher\\TeacherHomepage\\TeacherCatergory.js":"28","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\HomePage\\HomeBanner.js":"29","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\ApiServices\\auth.service.js":"30","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\Layout\\Layout.js":"31","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Buttons\\SumbitButton.js":"32","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Spinners\\SpinnerButton.js":"33","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Input\\FormInput.js":"34","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\MainPage\\MainPage.js":"35","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\CoursePage\\CourseVideo.js":"36","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\CoursePage\\CourseDesc.js":"37","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Logo\\google.js":"38","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\CoursePage\\VideoList.js":"39","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\HomePage\\CourseCards.js":"40","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\HomePage\\HomeProgressCourse.js":"41","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\HomePage\\Categories.js":"42","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\CoursePage\\Rating.js":"43","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Navigation\\Navbar\\Navbar.js":"44","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Logo\\Logo.js":"45"},{"size":614,"mtime":1657363052810,"results":"46","hashOfConfig":"47"},{"size":5227,"mtime":1657363052811,"results":"48","hashOfConfig":"47"},{"size":2333,"mtime":1657363052702,"results":"49","hashOfConfig":"47"},{"size":7670,"mtime":1657363052709,"results":"50","hashOfConfig":"47"},{"size":8820,"mtime":1657363052708,"results":"51","hashOfConfig":"47"},{"size":7578,"mtime":1657363052704,"results":"52","hashOfConfig":"47"},{"size":10899,"mtime":1657363052713,"results":"53","hashOfConfig":"47"},{"size":5621,"mtime":1657363052706,"results":"54","hashOfConfig":"47"},{"size":9810,"mtime":1657363052712,"results":"55","hashOfConfig":"47"},{"size":4792,"mtime":1657363052787,"results":"56","hashOfConfig":"47"},{"size":17227,"mtime":1657363052807,"results":"57","hashOfConfig":"47"},{"size":9305,"mtime":1657363052808,"results":"58","hashOfConfig":"47"},{"size":6499,"mtime":1657363052796,"results":"59","hashOfConfig":"47"},{"size":6501,"mtime":1657363052796,"results":"60","hashOfConfig":"47"},{"size":20350,"mtime":1657363052807,"results":"61","hashOfConfig":"47"},{"size":4551,"mtime":1657363052807,"results":"62","hashOfConfig":"47"},{"size":12677,"mtime":1657363052791,"results":"63","hashOfConfig":"47"},{"size":1058,"mtime":1657363052714,"results":"64","hashOfConfig":"47"},{"size":3051,"mtime":1657363052787,"results":"65","hashOfConfig":"47"},{"size":684,"mtime":1657363052788,"results":"66","hashOfConfig":"47"},{"size":749,"mtime":1657363052809,"results":"67","hashOfConfig":"47"},{"size":583,"mtime":1657363052796,"results":"68","hashOfConfig":"47"},{"size":838,"mtime":1657363052795,"results":"69","hashOfConfig":"47"},{"size":264,"mtime":1657363052808,"results":"70","hashOfConfig":"47"},{"size":1010,"mtime":1657363052803,"results":"71","hashOfConfig":"47"},{"size":162,"mtime":1657363052701,"results":"72","hashOfConfig":"47"},{"size":1800,"mtime":1657363052805,"results":"73","hashOfConfig":"47"},{"size":780,"mtime":1657363052806,"results":"74","hashOfConfig":"47"},{"size":1571,"mtime":1657363052795,"results":"75","hashOfConfig":"47"},{"size":3164,"mtime":1657363052701,"results":"76","hashOfConfig":"47"},{"size":473,"mtime":1657363052784,"results":"77","hashOfConfig":"47"},{"size":175,"mtime":1657363052784,"results":"78","hashOfConfig":"47"},{"size":368,"mtime":1657363052803,"results":"79","hashOfConfig":"47"},{"size":1308,"mtime":1657363052797,"results":"80","hashOfConfig":"47"},{"size":1199,"mtime":1657363052800,"results":"81","hashOfConfig":"47"},{"size":1302,"mtime":1657363052791,"results":"82","hashOfConfig":"47"},{"size":4024,"mtime":1657363052791,"results":"83","hashOfConfig":"47"},{"size":251,"mtime":1657363052799,"results":"84","hashOfConfig":"47"},{"size":1149,"mtime":1657363052792,"results":"85","hashOfConfig":"47"},{"size":1283,"mtime":1657363052794,"results":"86","hashOfConfig":"47"},{"size":1371,"mtime":1657363052795,"results":"87","hashOfConfig":"47"},{"size":2672,"mtime":1657363052794,"results":"88","hashOfConfig":"47"},{"size":1500,"mtime":1657363052792,"results":"89","hashOfConfig":"47"},{"size":4905,"mtime":1657363052801,"results":"90","hashOfConfig":"47"},{"size":230,"mtime":1657363052799,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f8c1n4",{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\index.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\serviceWorker.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\App.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\Auth\\Forms\\Otp\\Otp.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\Auth\\Forms\\Login\\Login.js",["190","191"],"import React, {Component} from 'react';\r\nimport AuthService from \"../../../ApiServices/auth.service\";\r\nimport Layout from '../../../components/Layout/Layout';\r\nimport '../Form.css';\r\nimport { Link,Redirect } from 'react-router-dom';\r\nimport Input from '../../../components/UI/Input/FormInput';\r\nimport SpinnerButton from '../../../components/UI/Spinners/SpinnerButton';\r\nimport MainPage from '../../../components/UI/MainPage/MainPage';\r\n//import axios from '../../../ApiServices/axiosUrl';\r\nimport Google_logo from '../../../components/UI/Logo/google';\r\nimport SumbitButton from '../../../components/UI/Buttons/SumbitButton';\r\nimport Alert from '../alert';\r\n\r\nclass Login extends Component {\r\n\r\n    state = { \r\n        Form:{\r\n            \r\n            email: {\r\n\r\n                placeholder: 'Email',\r\n                value: \"\",\r\n                valid: false,\r\n                type: 'email',\r\n                error: \" \",\r\n                msg: '',\r\n\r\n                validation: {\r\n                    required: true,\r\n                    regex:/^([a-z\\d\\.-]+)@([a-z\\d-]+)\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/,\r\n                   \r\n                },\r\n                touched: false,\r\n            \r\n        },\r\n\r\n            password: {\r\n\r\n                placeholder: 'Password',\r\n                value: \"\",\r\n                valid: false,\r\n                type: 'password',\r\n                error: \" \",\r\n                msg: '',\r\n\r\n                validation: {\r\n                    required: true,\r\n                    minLength:5,\r\n                    maxLength:18\r\n                },\r\n                touched: false,\r\n            \r\n        },\r\n\r\n    },\r\n    loading:false,\r\n      \r\n    alert: {\r\n        valid:false,\r\n        msg:\"\",\r\n        alertType:\"\",\r\n    },\r\n\r\n    redirect:null,\r\n    alertPressed:false,\r\n   \r\n     \r\n}\r\n\r\n\r\nAlertError(alertmsg, alertType) {\r\n    const AlertArray = {...this.state.alert};\r\n    AlertArray.msg = alertmsg;\r\n    AlertArray.valid=true;\r\n    AlertArray.alertType=alertType;\r\n    this.setState({alert:AlertArray});\r\n\r\n}\r\n\r\n\r\ncheckValidity(value,rules){\r\n    let isValid = true;\r\n    const regex = rules.regex;\r\n    if(rules.required){\r\n        isValid =value.trim()!=='' && isValid;\r\n    }\r\n\r\n    if(rules.minLength){\r\n        isValid = value.length >= rules.minLength  && isValid;\r\n    }\r\n \r\n    \r\n    if(rules.maxLength){\r\n        isValid = value.length <= rules.maxLength  && isValid;\r\n    }\r\n\r\n    if(rules.regex){\r\n        isValid = regex.test(value) && isValid;\r\n    }\r\n\r\n    return isValid;\r\n    \r\n }\r\n\r\n\r\n//   runs whenever there is any change in the input field\r\ninputchangeHandler = (event,inputIdentifier)=> {\r\n    const updatedForm = {\r\n        ...this.state.Form\r\n    }\r\n    const updatedElement = {...updatedForm[inputIdentifier]}\r\n    \r\n\r\n    updatedElement.value = event.target.value;\r\n\r\n    updatedForm[inputIdentifier] = updatedElement;\r\n    this.setState({Form: updatedForm});\r\n\r\n    updatedElement.valid = this.checkValidity(updatedElement.value,\r\n        updatedElement.validation);\r\n\r\n}\r\n\r\ninputBlurHandler = (event,inputIdentifier)=> {\r\n    const updatedForm = {\r\n        ...this.state.Form\r\n    }\r\n    const updatedElement = {...updatedForm[inputIdentifier]}\r\n    \r\n\r\n    if(updatedElement.value.length>0) \r\n        updatedElement.touched=true;\r\n\r\n    else {updatedElement.touched=false;\r\n          updatedElement.error=\"\";  \r\n    }\r\n    \r\n    \r\n        \r\n    // msg error for password\r\n    if(inputIdentifier === \"password\" && !updatedElement.valid){\r\n        updatedElement.error = \"At least 5 characters and at most 18\";\r\n        updatedElement.msg=\"\";\r\n    }\r\n    if(inputIdentifier === \"password\" && updatedElement.valid){\r\n        updatedElement.error=\"\";\r\n        updatedElement.msg=\"valid\";\r\n    }\r\n    // msg errors for email\r\n    if(inputIdentifier === \"email\" && !updatedElement.valid){\r\n        updatedElement.error = \"Invalid format\";\r\n        updatedElement.msg=\"\";\r\n    }\r\n    if(inputIdentifier === \"email\" && updatedElement.valid){\r\n        updatedElement.error=\"\";\r\n        updatedElement.msg=\"valid\";\r\n    }\r\n\r\n    updatedForm[inputIdentifier] = updatedElement;\r\n    this.setState({Form: updatedForm});\r\n\r\n}\r\n\r\nOverallValidity = ()=>{\r\n\r\n    for(let validate in this.state.Form){\r\n        if(!this.state.Form[validate].valid){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\ntimeout = ()=> {\r\n    let temp ={...this.state.alert}\r\n    temp.msg=''\r\n    temp.alertType=''\r\n\r\n     this.setState({alert:temp,alertPressed:false}) \r\n}\r\n\r\n\r\nformHandler = (event)=> {\r\n    event.preventDefault();\r\n    this.setState({alertPressed:true})\r\n\r\n    setTimeout(this.timeout , 3000);\r\n\r\n     if(this.OverallValidity()){\r\n\r\n        this.setState({loading:true});\r\n        const formData ={};\r\n        for(let formElement in this.state.Form){\r\n                formData[formElement]=this.state.Form[formElement].value;\r\n        }\r\n        \r\n        AuthService.login(formData)\r\n        .then(response => {\r\n          \r\n            console.log('Response:', response)\r\n            if(response.status ===201 || response.status ===200)\r\n\r\n                {\r\n                \r\n                //alert(response.data.message);\r\n                this.AlertError(\"Successfully Logged in\", \"success\");\r\n  \r\n                localStorage.setItem('user',response.data.token);\r\n                localStorage.setItem('userId',response.data.userId);\r\n                localStorage.setItem('userName',response.data.username);\r\n                this.setState({loading:false})\r\n             this.setState({redirect:'/HomePage'})\r\n             \r\n              //  window.location.reload();\r\n           \r\n            }\r\n            else \r\n                alert(\"Something went wrong\")})\r\n\r\n        .catch(error=>{console.log(error.response); \r\n            this.setState({loading:false});\r\n            this.AlertError(error.response.data.message, \"danger\");\r\n            if(error.response.data.message ===' you have not verified your otp  , new otp has been sent to your email THANK YOU!'){\r\n                this.setState({redirect:'signup/otp'})\r\n            }\r\n\r\n          });\r\n        }\r\n        \r\n        else this.AlertError(\"Make sure the Validations are correct\", \"warning\");\r\n    }\r\n\r\n\r\n   \r\n\r\n\r\nrender() {\r\n   localStorage.removeItem('valid');\r\n   localStorage.removeItem('msg');\r\n   localStorage.removeItem('type');\r\n\r\n    let alertContent = null;\r\n\r\n    if(this.state.alert.valid){\r\n        alertContent = ( <Alert value={this.state.alertPressed} \r\n                        alertMsg ={this.state.alert.msg} \r\n                                alertType={this.state.alert.alertType} /> )\r\n    }\r\n\r\n   \r\n    if (this.state.redirect) {\r\n        return <Redirect to={this.state.redirect} />\r\n      }\r\n\r\n    const formElementsArray =[];\r\n    for(let key in this.state.Form ){\r\n        formElementsArray.push({\r\n            id:key,\r\n            config:this.state.Form[key]\r\n        });\r\n\r\n    };\r\n\r\n    let LoginSumbitButton= <SumbitButton className={\"Sumbit-btn\"} Label={\"Login\"}/>;\r\n   \r\n    if(this.state.loading){\r\n        LoginSumbitButton= <SpinnerButton spinnerclass={\"Sumbit-btn\"}/>;\r\n    }\r\n\r\n    let form = (\r\n      <div className=\"login-form\">\r\n          <button className=\"google-btn\"> <Google_logo/>  Continue using google</button>\r\n          <p className=\"devider-or\">OR</p>\r\n        <form onSubmit={this.formHandler} >\r\n        \r\n            {\r\n                formElementsArray.map(x=> (\r\n\r\n                  <Input \r\n                    key={x.id}\r\n                    placeholder={x.config.placeholder}\r\n                    value={x.config.value}\r\n                    type={x.config.type}\r\n                    invalid={!x.config.valid}\r\n                    touched={x.config.touched}\r\n                    errors={x.config.error}\r\n                    msg={x.config.msg}\r\n                    blur={(event)=> this.inputBlurHandler(event,x.id)}\r\n                    changed={(event)=> this.inputchangeHandler(event,x.id)}/>\r\n\r\n                ))\r\n            }\r\n            <Link to=\"/forgotpasswordemail\"> \r\n            <p className=\"forgot-password\"  > Forgot Password?</p></Link>\r\n\r\n            {LoginSumbitButton}\r\n           <p className=\"account-login\"><Link to='/signup'>  New User? Sign up</Link></p>\r\n         \r\n\r\n               \r\n        </form> \r\n        </div>\r\n    );\r\n        \r\n\r\n\r\n        return (<Layout>\r\n                    {alertContent}\r\n                    <div className=\"SideContent\">\r\n                        \r\n                        <MainPage\r\n                        shelp={true}\r\n                        heading1={\"Resume your\"}\r\n                        heading2={\"learning with\"}/>\r\n\r\n                            {form}\r\n                    </div>\r\n            </Layout>\r\n        );\r\n    }\r\n  \r\n}\r\n\r\nexport default Login;","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\Auth\\Forms\\ForgotPassword\\EmailVerify.js",["192","193","194"],"import React, {Component} from 'react';\r\nimport Layout from '../../../components/Layout/Layout';\r\nimport AuthService from \"../../../ApiServices/auth.service\";\r\nimport '../Form.css';\r\nimport { Link,Redirect } from 'react-router-dom';\r\nimport Input from '../../../components/UI/Input/FormInput';\r\nimport SpinnerButton from '../../../components/UI/Spinners/SpinnerButton';\r\nimport MainPage from '../../../components/UI/MainPage/MainPage';\r\n//import axios from '../../../ApiServices/axiosUrl';\r\nimport Google_logo from '../../../components/UI/Logo/google';\r\nimport SumbitButton from '../../../components/UI/Buttons/SumbitButton';\r\nimport Alert from '../alert';\r\n\r\nclass EmailVerify extends Component {\r\n\r\n    state = { \r\n        Form:{\r\n            \r\n            email: {\r\n\r\n                placeholder: 'Email',\r\n                value: \"\",\r\n                valid: false,\r\n                type: 'email',\r\n                error: \" \",\r\n                msg: '',\r\n\r\n                validation: {\r\n                    required: true,\r\n                    regex:/^([a-z\\d\\.-]+)@([a-z\\d-]+)\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/,\r\n                   \r\n                },\r\n                touched: false,\r\n            \r\n        },\r\n\r\n            \r\n    },\r\n    loading:false,\r\n      \r\n    alert: {\r\n        valid:false,\r\n        msg:\"\",\r\n        alertType:\"\",\r\n    },\r\n\r\n    redirect:null,\r\n    alertPressed:false,\r\n   \r\n     \r\n}\r\n\r\n\r\nAlertError(alertmsg, alertType) {\r\n    const AlertArray = {...this.state.alert};\r\n    AlertArray.msg = alertmsg;\r\n    AlertArray.valid=true;\r\n    AlertArray.alertType=alertType;\r\n    this.setState({alert:AlertArray});\r\n\r\n}\r\n\r\n\r\ncheckValidity(value,rules){\r\n    let isValid = true;\r\n    const regex = rules.regex;\r\n    if(rules.required){\r\n        isValid =value.trim()!=='' && isValid;\r\n    }\r\n\r\n    if(rules.minLength){\r\n        isValid = value.length >= rules.minLength  && isValid;\r\n    }\r\n \r\n    \r\n    if(rules.maxLength){\r\n        isValid = value.length <= rules.maxLength  && isValid;\r\n    }\r\n\r\n    if(rules.regex){\r\n        isValid = regex.test(value) && isValid;\r\n    }\r\n\r\n    return isValid;\r\n    \r\n }\r\n\r\n\r\n//   runs whenever there is any change in the input field\r\ninputchangeHandler = (event,inputIdentifier)=> {\r\n    const updatedForm = {\r\n        ...this.state.Form\r\n    }\r\n    const updatedElement = {...updatedForm[inputIdentifier]}\r\n    \r\n\r\n    updatedElement.value = event.target.value;\r\n\r\n    updatedForm[inputIdentifier] = updatedElement;\r\n    this.setState({Form: updatedForm});\r\n\r\n    updatedElement.valid = this.checkValidity(updatedElement.value,\r\n        updatedElement.validation);\r\n\r\n}\r\n\r\ninputBlurHandler = (event,inputIdentifier)=> {\r\n    const updatedForm = {\r\n        ...this.state.Form\r\n    }\r\n    const updatedElement = {...updatedForm[inputIdentifier]}\r\n    \r\n\r\n    if(updatedElement.value.length>0) \r\n        updatedElement.touched=true;\r\n\r\n    else {updatedElement.touched=false;\r\n          updatedElement.error=\"\";  \r\n    }\r\n    \r\n    \r\n    // msg errors for email\r\n    if(inputIdentifier === \"email\" && !updatedElement.valid){\r\n        updatedElement.error = \"check format\";\r\n        updatedElement.msg=\"\";\r\n    }\r\n    if(inputIdentifier === \"email\" && updatedElement.valid){\r\n        updatedElement.error=\"\";\r\n        updatedElement.msg=\"All good!\";\r\n    }\r\n\r\n    updatedForm[inputIdentifier] = updatedElement;\r\n    this.setState({Form: updatedForm});\r\n\r\n}\r\n\r\nOverallValidity = ()=>{\r\n\r\n    for(let validate in this.state.Form){\r\n        if(!this.state.Form[validate].valid){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\ntimeout = ()=> {\r\n    let temp ={...this.state.alert}\r\n    temp.msg=''\r\n    temp.alertType=''\r\n\r\n     this.setState({alert:temp,alertPressed:false}) \r\n   \r\n}\r\n\r\n\r\nformHandler = (event)=> {\r\n\r\n    event.preventDefault();\r\n    this.setState({alertPressed:true})\r\n    setTimeout(this.timeout , 3000);\r\n\r\n     if(this.OverallValidity()){\r\n\r\n        this.setState({loading:true});\r\n        const formData ={};\r\n        for(let formElement in this.state.Form){\r\n                formData[formElement]=this.state.Form[formElement].value;\r\n        }\r\n        \r\n        AuthService.VerifyEmail(formData)\r\n        .then(response => {\r\n          \r\n            console.log('VerifyEmail:', response)\r\n            if(response.status ===201 || response.status ===200)\r\n\r\n                {\r\n                \r\n                // alert(response.data.message);\r\n                   localStorage.setItem('userToken',response.data.result.token);\r\n                //    localStorage.setItem('userId',response.data.userId);\r\n                //    localStorage.setItem('userName',response.data.username);\r\n                this.setState({loading:false})\r\n                this.setState({redirect:'/ForgotPasswordotp'})\r\n                console.log(response.data)\r\n            \r\n           \r\n            }\r\n            else \r\n                alert(\"Something went wrong\")})\r\n\r\n        .catch(error=>{console.log(error.response); \r\n            this.setState({loading:false});\r\n            this.AlertError(error.response.data.message, \"danger\");});\r\n  \r\n        }\r\n        \r\n        else this.AlertError(\"Make sure the Validations are correct\", \"warning\");\r\n    }\r\n\r\n\r\n   \r\n\r\n\r\nrender() {\r\n\r\n    let value=0;\r\n    value= !value;\r\n    let alertContent = null;\r\n\r\n    if(this.state.alert.valid){\r\n        alertContent = ( <Alert value={this.state.alertPressed} alertMsg ={this.state.alert.msg} \r\n                                alertType={this.state.alert.alertType} /> )\r\n    }\r\n\r\n   \r\n    if (this.state.redirect) {\r\n        return <Redirect to={this.state.redirect} />\r\n      }\r\n\r\n    const formElementsArray =[];\r\n    for(let key in this.state.Form ){\r\n        formElementsArray.push({\r\n            id:key,\r\n            config:this.state.Form[key]\r\n        });\r\n\r\n    };\r\n\r\n    let LoginSumbitButton= <SumbitButton className={\"Sumbit-btn\"} Label={\"Submit\"}/>;\r\n   \r\n    if(this.state.loading){\r\n        LoginSumbitButton= <SpinnerButton spinnerclass={\"Sumbit-btn\"}/>;\r\n    }\r\n\r\n    let form = (\r\n      <div className=\"login-form-otp \">\r\n          \r\n        <form onSubmit={this.formHandler} >\r\n        \r\n            {\r\n                formElementsArray.map(x=> (\r\n\r\n                  <Input \r\n                    key={x.id}\r\n                    placeholder={x.config.placeholder}\r\n                    value={x.config.value}\r\n                    type={x.config.type}\r\n                    invalid={!x.config.valid}\r\n                    touched={x.config.touched}\r\n                    errors={x.config.error}\r\n                    msg={x.config.msg}\r\n                    blur={(event)=> this.inputBlurHandler(event,x.id)}\r\n                    changed={(event)=> this.inputchangeHandler(event,x.id)}/>\r\n\r\n                ))\r\n            }\r\n            <Link to=\"/login\"> \r\n            <p className=\"forgot-password\"  >Back to Login</p></Link>\r\n\r\n            {LoginSumbitButton}\r\n            <p className=\"account-login\"> New User? <a href=\"/\">Sign up</a></p>\r\n         \r\n\r\n               \r\n        </form> \r\n        </div>\r\n    );\r\n        \r\n\r\n\r\n        return (<Layout>\r\n                    {alertContent}\r\n                    <div className=\"SideContent\">\r\n                        \r\n                        <MainPage\r\n                        shelp={false}\r\n                        heading1={\"Reset Password,\"}\r\n                        heading2={\"Enter your Email\"}/>\r\n\r\n                            {form}\r\n                    </div>\r\n            </Layout>\r\n        );\r\n    }\r\n  \r\n}\r\n\r\nexport default EmailVerify;","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\Auth\\Forms\\Signup\\Signup.js",["195","196"],"import React, {Component} from 'react';\r\nimport {Link, Redirect } from 'react-router-dom';\r\n//import Login from '../Login/Login';\r\nimport Layout from '../../../components/Layout/Layout';\r\nimport AuthService from \"../../../ApiServices/auth.service\";\r\nimport '../Form.css';\r\nimport Input from '../../../components/UI/Input/FormInput';\r\nimport MainPage from '../../../components/UI/MainPage/MainPage';\r\nimport Google_logo from '../../../components/UI/Logo/google';\r\nimport SpinnerButton from '../../../components/UI/Spinners/SpinnerButton';\r\nimport SumbitButton from '../../../components/UI/Buttons/SumbitButton';\r\nimport Alert from '../alert';\r\n\r\n\r\nclass Signup extends Component {\r\n\r\n    state = { \r\n            Form:{\r\n                 name: {\r\n\r\n                    placeholder: 'First Name',\r\n                    value: \"\",\r\n                    valid: false,\r\n                    type: 'text',\r\n                    error: \" \",\r\n                    msg: '',\r\n\r\n                    validation: {\r\n                        required: true,\r\n                        minLength:5,\r\n                        maxLength:15\r\n                    },\r\n\r\n                    touched: false,\r\n                \r\n            },\r\n                email: {\r\n\r\n                    placeholder: 'Email',\r\n                    value: \"\",\r\n                    valid: false,\r\n                    type: 'email',\r\n                    error: \" \",\r\n                    msg: '',\r\n                    \r\n\r\n                    validation: {\r\n                        required: true,\r\n                        regex:/^([a-z\\d\\.-]+)@([a-z\\d-]+)\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/\r\n                       \r\n                    },\r\n                    touched: false,\r\n                \r\n            },\r\n\r\n                password: {\r\n\r\n                    placeholder: 'Password',\r\n                    value: \"\",\r\n                    valid: false,\r\n                    type: 'password',\r\n                    error: \" \",\r\n                    msg: '',\r\n\r\n                    validation: {\r\n                        required: true,\r\n                        minLength:5,\r\n                        maxLength:18\r\n                    },\r\n                    touched: false,\r\n                \r\n            },\r\n            \r\n\r\n\r\n            ConfirmPassword: {\r\n\r\n                placeholder: 'Confirm Password',\r\n                value: \"\",\r\n                valid: false,\r\n                type: 'password',\r\n                error: \" \",\r\n                msg: '',\r\n\r\n                validation: {\r\n                    required: true,\r\n                    match: true,\r\n                   \r\n                },\r\n                touched: false,\r\n\r\n            }\r\n\r\n        },\r\n\r\n        loading:false,\r\n        redirect:null,\r\n        \r\n        alert: {\r\n            valid:false,\r\n            msg:\"\",\r\n            alertType:\" \",\r\n        },\r\n\r\n        alertPressed:false,\r\n       \r\n    }\r\n\r\n    AlertError(alertmsg, alertType) {\r\n        const AlertArray = {...this.state.alert};\r\n        AlertArray.msg = alertmsg;\r\n        AlertArray.valid=true;\r\n        AlertArray.alertType=alertType;\r\n        this.setState({alert:AlertArray});\r\n\r\n    }\r\n\r\n\r\n\r\n    checkValidity(value,rules){\r\n        let isValid = true;\r\n        const regex=rules.regex;\r\n\r\n        if(rules.required){\r\n            isValid =value.trim()!=='' && isValid;\r\n        }\r\n\r\n        if(rules.minLength){\r\n            isValid = value.length >= rules.minLength  && isValid;\r\n        }\r\n     \r\n        \r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength  && isValid;\r\n        }\r\n\r\n        if(rules.regex){\r\n            isValid = regex.test(value) && isValid;\r\n        }\r\n\r\n        if(rules.match){\r\n            isValid = value === (this.state.Form['password'].value) && isValid;\r\n        }\r\n\r\n        return isValid;\r\n        \r\n     }\r\n\r\n\r\n//   runs whenever there is any change in the input field\r\ninputchangeHandler = (event,inputIdentifier)=> {\r\n    const updatedForm = {\r\n        ...this.state.Form\r\n    }\r\n    const updatedElement = {...updatedForm[inputIdentifier]}\r\n    \r\n\r\n    updatedElement.value = event.target.value;\r\n\r\n    updatedForm[inputIdentifier] = updatedElement;\r\n    this.setState({Form: updatedForm});\r\n\r\n\r\n    updatedElement.valid = this.checkValidity(updatedElement.value,\r\n        updatedElement.validation);\r\n\r\n}\r\n\r\ninputBlurHandler = (event,inputIdentifier)=> {\r\n    const updatedForm = {\r\n        ...this.state.Form\r\n    }\r\n    const updatedElement = {...updatedForm[inputIdentifier]}\r\n    \r\n\r\n    if(updatedElement.value.length>0) \r\n        updatedElement.touched=true;\r\n\r\n    else {updatedElement.touched=false;\r\n          updatedElement.error=\"\";  \r\n    }\r\n    \r\n\r\n        // msg errrors for username\r\n\r\n    if(inputIdentifier ==='name' && !updatedElement.valid){\r\n        updatedElement.error = \"Minimum:5 and Maximum:15 characters\";\r\n        updatedElement.msg=\"\";\r\n    }\r\n    if(inputIdentifier ==='name' && updatedElement.valid){\r\n        updatedElement.error=\"\";\r\n        updatedElement.msg=\"valid\";\r\n    }\r\n        \r\n    // msg error for password\r\n    if(inputIdentifier === \"password\" && !updatedElement.valid){\r\n        updatedElement.error = \"Minimum:5 and Maximum:18 characters\";\r\n        updatedElement.msg=\"\";\r\n    }\r\n    if(inputIdentifier === \"password\" && updatedElement.valid){\r\n        updatedElement.error=\"\";\r\n        updatedElement.msg=\"valid\";\r\n    }\r\n    // confirm password\r\n    if(inputIdentifier === \"ConfirmPassword\" && !updatedElement.valid){\r\n        updatedElement.error = \"Passwords do not match\";\r\n        updatedElement.msg=\"\";\r\n    }\r\n    if(inputIdentifier === \"ConfirmPassword\" && updatedElement.valid){\r\n        updatedElement.error=\"\";\r\n        updatedElement.msg=\"Password matched!\";\r\n    }\r\n\r\n    // msg errors for email\r\n    if(inputIdentifier === \"email\" && !updatedElement.valid){\r\n        updatedElement.error = \"Invalid format\";\r\n        updatedElement.msg=\"\";\r\n    }\r\n    if(inputIdentifier === \"email\" && updatedElement.valid){\r\n        updatedElement.error=\"\";\r\n        updatedElement.msg=\"valid\";\r\n    }\r\n\r\n    updatedForm[inputIdentifier] = updatedElement;\r\n    this.setState({Form: updatedForm});\r\n\r\n}\r\n   \r\n    OverallValidity = ()=>{\r\n\r\n        for(let validate in this.state.Form){\r\n            if(!this.state.Form[validate].valid){\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    timeout = ()=> {\r\n        let temp ={...this.state.alert}\r\n        temp.msg=''\r\n        temp.alertType=''\r\n    \r\n         this.setState({alert:temp,alertPressed:false}) \r\n         \r\n    }\r\n    \r\n\r\n\r\n\r\n    formHandler = (event)=> {\r\n        event.preventDefault();\r\n        this.setState({alertPressed:true})\r\n        setTimeout(this.timeout , 3000);\r\n         \r\n        if(this.OverallValidity()){\r\n            this.setState({loading:true});\r\n           \r\n            localStorage.setItem('email',this.state.Form[\"email\"].value);\r\n         \r\n            const formData ={};\r\n            for(let formElement in this.state.Form){\r\n                    formData[formElement]=this.state.Form[formElement].value;\r\n            }\r\n           \r\n\r\n\r\n            \r\n            AuthService.register(formData) \r\n            .then(response => {console.log('Response:', response)\r\n\r\n                if(response.status ===201 || response.status ===200){\r\n                     localStorage.setItem('token', response.data.token) \r\n\r\n                     localStorage.setItem(\"valid\",true);\r\n                     localStorage.setItem(\"type\",\"success\");\r\n                     localStorage.setItem(\"msg\",response.data.message);\r\n                   \r\n                     this.setState({ redirect: \"/signup/otp\" });\r\n                }\r\n                 \r\n\r\n                })\r\n                  //  alert(\"Something went wrong\")})\r\n\r\n            .catch(error=>{console.log(error.response);\r\n                 this.setState({loading:false})\r\n                 this.AlertError(error.response.data.data[0].msg, \"danger\")} );\r\n            \r\n            \r\n        \r\n\r\n        }\r\n        \r\n        else{ \r\n         this.AlertError(\"Make sure the Validations are correct\", \"warning\");\r\n       \r\n\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        \r\n\r\n        let alertContent = null;\r\n        \r\n  \r\n        if(this.state.alert.valid){\r\n            alertContent = ( <Alert value={this.state.alertPressed} \r\n                alertMsg ={this.state.alert.msg} \r\n                alertType={this.state.alert.alertType} /> )\r\n        }\r\n        \r\n        \r\n\r\n        if (this.state.redirect) {\r\n            return <Redirect to={this.state.redirect} />\r\n          }\r\n\r\n        const formElementsArray =[];\r\n        for(let key in this.state.Form ){\r\n            formElementsArray.push({\r\n                id:key,\r\n                config:this.state.Form[key]\r\n            });\r\n\r\n        };\r\n\r\n        let SigninSumbitButton= <SumbitButton className={\"Sumbit-btn\"} Label={\"Create Account\"}/>;\r\n   \r\n        if(this.state.loading){\r\n            SigninSumbitButton= <SpinnerButton spinnerclass={\"Sumbit-btn\"}/>;\r\n    }\r\n\r\n        let form = (\r\n          <div className=\"login-form\">\r\n              <button className=\"google-btn\"> <Google_logo/>  Continue using google</button>\r\n              <p className=\"devider-or\">OR</p>\r\n            <form onSubmit={this.formHandler} >\r\n            \r\n                {\r\n                    formElementsArray.map(x=> (\r\n\r\n                      <Input \r\n                        key={x.id}\r\n                        placeholder={x.config.placeholder}\r\n                        value={x.config.value}\r\n                        type={x.config.type}\r\n                        invalid={!x.config.valid}\r\n                        touched={x.config.touched}\r\n                        errors={x.config.error}\r\n                        msg={x.config.msg}\r\n                        blur={(event)=> this.inputBlurHandler(event,x.id)}\r\n                        changed={(event)=> this.inputchangeHandler(event,x.id)}/>\r\n\r\n                    ))\r\n                }\r\n               \r\n                {SigninSumbitButton}\r\n              <p className=\"account-login\"> Already have an account?  <Link to=\"/login\"> \r\n              Login</Link></p>\r\n                 {/* <hr/>\r\n\r\n                 <p className=\"Link-teach\" onClick={this.product} >Teach on S-help</p>           */}\r\n            </form> \r\n            </div>\r\n        );\r\n\r\n        return (\r\n           <Layout>\r\n                {alertContent}\r\n                \r\n                <div className=\"SideContent\">\r\n                        <MainPage \r\n                        shelp={true}\r\n                        heading1={\"Start your\"}\r\n                        heading2={\"learning with\"}/>\r\n\r\n                            {form}\r\n                    </div>\r\n        </Layout>\r\n        );\r\n    }\r\n  \r\n}\r\n\r\n\r\nexport default Signup;","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\Auth\\Forms\\ForgotPassword\\ForgotPassOtp.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\Auth\\Forms\\ResetPassword\\ResetPassword.js",["197","198"],"import React, {Component} from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AuthService from \"../../../ApiServices/auth.service\";\r\nimport '../Form.css';\r\nimport Input from '../../../components/UI/Input/FormInput';\r\nimport MainPage from '../../../components/UI/MainPage/MainPage';\r\nimport Layout from '../../../components/Layout/Layout';\r\n//import Google_logo from '../../../components/UI/Logo/google';\r\nimport SpinnerButton from '../../../components/UI/Spinners/SpinnerButton';\r\nimport SumbitButton from '../../../components/UI/Buttons/SumbitButton';\r\nimport Alert from '../alert';\r\n\r\n\r\nclass ResetPassword extends Component {\r\n\r\n    state = { \r\n            Form:{\r\n                 \r\n                email: {\r\n\r\n                    placeholder: 'Email',\r\n                    value: \"\",\r\n                    valid: false,\r\n                    type: 'email',\r\n                    error: \" \",\r\n                    msg: '',\r\n                    \r\n\r\n                    validation: {\r\n                        required: true,\r\n                        regex:/^([a-z\\d\\.-]+)@([a-z\\d-]+)\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/\r\n                       \r\n                    },\r\n                    touched: false,\r\n                \r\n            },\r\n\r\n            newPassword: {\r\n\r\n                    placeholder: 'New Password',\r\n                    value: \"\",\r\n                    valid: false,\r\n                    type: 'password',\r\n                    error: \" \",\r\n                    msg: '',\r\n\r\n                    validation: {\r\n                        required: true,\r\n                        minLength:5,\r\n                        maxLength:18\r\n                    },\r\n                    touched: false,\r\n                \r\n            },\r\n\r\n            confirmPassword: {\r\n\r\n                placeholder: 'Confirm New Password',\r\n                value: \"\",\r\n                valid: false,\r\n                type: 'password',\r\n                error: \" \",\r\n                msg: '',\r\n\r\n                validation: {\r\n                    required: true,\r\n                    match:true,\r\n                },\r\n                touched: false,\r\n            \r\n        },\r\n\r\n        },\r\n        loading:false,\r\n        redirect:null,\r\n        \r\n        alert: {\r\n            valid:false,\r\n            msg:\"\",\r\n            alertType:\" \",\r\n        },\r\n\r\n        alertPressed:false,\r\n       \r\n    }\r\n\r\n    AlertError(alertmsg, alertType) {\r\n        const AlertArray = {...this.state.alert};\r\n        AlertArray.msg = alertmsg;\r\n        AlertArray.valid=true;\r\n        AlertArray.alertType=alertType;\r\n        this.setState({alert:AlertArray});\r\n\r\n    }\r\n\r\n\r\n\r\n    checkValidity(value,rules){\r\n        let isValid = true;\r\n        const regex=rules.regex;\r\n\r\n        if(rules.required){\r\n            isValid =value.trim()!=='' && isValid;\r\n        }\r\n\r\n        if(rules.minLength){\r\n            isValid = value.length >= rules.minLength  && isValid;\r\n        }\r\n     \r\n        \r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength  && isValid;\r\n        }\r\n\r\n        if(rules.regex){\r\n            isValid = regex.test(value) && isValid;\r\n        }\r\n\r\n        if(rules.match){\r\n            isValid = value === (this.state.Form['newPassword'].value) && isValid;\r\n        }\r\n\r\n        return isValid;\r\n        \r\n     }\r\n\r\n\r\n//   runs whenever there is any change in the input field\r\ninputchangeHandler = (event,inputIdentifier)=> {\r\n    const updatedForm = {\r\n        ...this.state.Form\r\n    }\r\n    const updatedElement = {...updatedForm[inputIdentifier]}\r\n    \r\n\r\n    updatedElement.value = event.target.value;\r\n\r\n    updatedForm[inputIdentifier] = updatedElement;\r\n    this.setState({Form: updatedForm});\r\n\r\n\r\n    updatedElement.valid = this.checkValidity(updatedElement.value,\r\n        updatedElement.validation);\r\n\r\n}\r\n\r\ninputBlurHandler = (event,inputIdentifier)=> {\r\n    const updatedForm = {\r\n        ...this.state.Form\r\n    }\r\n    const updatedElement = {...updatedForm[inputIdentifier]}\r\n    \r\n\r\n    if(updatedElement.value.length>0) \r\n        updatedElement.touched=true;\r\n\r\n    else {updatedElement.touched=false;\r\n          updatedElement.error=\"\";  \r\n    }\r\n    \r\n        \r\n    // msg error for password\r\n    if(inputIdentifier === \"password\" && !updatedElement.valid){\r\n        updatedElement.error = \"At least 5 characters and at most 18\";\r\n        updatedElement.msg=\"\";\r\n    }\r\n    if(inputIdentifier === \"newPassword\" && updatedElement.valid){\r\n        updatedElement.error=\"\";\r\n        updatedElement.msg=\"All good!\";\r\n    }\r\n    // msg errors for email\r\n    if(inputIdentifier === \"email\" && !updatedElement.valid){\r\n        updatedElement.error = \"check format\";\r\n        updatedElement.msg=\"\";\r\n    }\r\n    if(inputIdentifier === \"email\" && updatedElement.valid){\r\n        updatedElement.error=\"\";\r\n        updatedElement.msg=\"All good!\";\r\n    }\r\n\r\n     // confirm password\r\n     if(inputIdentifier === \"confirmPassword\" && !updatedElement.valid){\r\n        updatedElement.error = \"Passwords do not match\";\r\n        updatedElement.msg=\"\";\r\n    }\r\n    if(inputIdentifier === \"confirmPassword\" && updatedElement.valid){\r\n        updatedElement.error=\"\";\r\n        updatedElement.msg=\"All good!\";\r\n    }\r\n\r\n    updatedForm[inputIdentifier] = updatedElement;\r\n    this.setState({Form: updatedForm});\r\n\r\n}\r\n   \r\n    OverallValidity = ()=>{\r\n\r\n        for(let validate in this.state.Form){\r\n            if(!this.state.Form[validate].valid){\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n\r\n    formHandler = (event)=> {\r\n        event.preventDefault();\r\n        this.setState({alertPressed:true})\r\n        setTimeout( ()=> this.setState({alertPressed:false}) , 2000);\r\n         \r\n        if(this.OverallValidity()){\r\n            this.setState({loading:true});\r\n           \r\n           // localStorage.setItem('email',this.state.Form[\"email\"].value);\r\n         \r\n            const formData ={};\r\n            for(let formElement in this.state.Form){\r\n                    formData[formElement]=this.state.Form[formElement].value;\r\n            }\r\n           \r\n\r\n\r\n            \r\n            AuthService.ResetPassword(formData) \r\n            .then(response => {console.log('Response:', response)\r\n\r\n                if(response.status ===201 || response.status ===200){\r\n                    //  localStorage.setItem('token', response.data.token) \r\n\r\n                    //  localStorage.setItem(\"valid\",true);\r\n                    //  localStorage.setItem(\"type\",\"success\");\r\n                    //  localStorage.setItem(\"msg\",response.data.message);\r\n                   \r\n                     this.setState({ redirect: \"/login\" });\r\n                }\r\n                 \r\n\r\n                else \r\n                    this.AlertError(\"Something went wrong\", \"danger\")})\r\n                  //  alert(\"Something went wrong\")})\r\n\r\n            .catch(error=>{console.log(error);\r\n                 this.setState({loading:false})\r\n                 this.AlertError(\"Something went wrong\", \"danger\")} );\r\n            \r\n            \r\n\r\n        }\r\n        \r\n        else{ \r\n         this.AlertError(\"Make sure the Validations are correct\", \"warning\");\r\n       \r\n\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        \r\n\r\n        let alertContent = null;\r\n        \r\n        let value=0;\r\n        value= !value;\r\n\r\n        if(this.state.alert.valid){\r\n            alertContent = ( <Alert value={this.state.alertPressed} \r\n                alertMsg ={this.state.alert.msg} \r\n                alertType={this.state.alert.alertType} /> )\r\n        }\r\n        \r\n        \r\n\r\n        if (this.state.redirect) {\r\n            return <Redirect to={this.state.redirect} />\r\n          }\r\n\r\n        const formElementsArray =[];\r\n        for(let key in this.state.Form ){\r\n            formElementsArray.push({\r\n                id:key,\r\n                config:this.state.Form[key]\r\n            });\r\n\r\n        };\r\n\r\n        let SigninSumbitButton= <SumbitButton className={\"Sumbit-btn\"} Label={\"Reset Password\"}/>;\r\n   \r\n        if(this.state.loading){\r\n            SigninSumbitButton= <SpinnerButton spinnerclass={\"Sumbit-btn\"}/>;\r\n    }\r\n\r\n        let form = (\r\n          <div className=\"login-form\">\r\n            \r\n            <form onSubmit={this.formHandler} >\r\n            \r\n                {\r\n                    formElementsArray.map(x=> (\r\n\r\n                      <Input \r\n                        key={x.id}\r\n                        placeholder={x.config.placeholder}\r\n                        value={x.config.value}\r\n                        type={x.config.type}\r\n                        invalid={!x.config.valid}\r\n                        touched={x.config.touched}\r\n                        errors={x.config.error}\r\n                        msg={x.config.msg}\r\n                        blur={(event)=> this.inputBlurHandler(event,x.id)}\r\n                        changed={(event)=> this.inputchangeHandler(event,x.id)}/>\r\n\r\n                    ))\r\n                }\r\n               \r\n                {SigninSumbitButton}\r\n                <p className=\"account-login\"> Already have an account? <a href=\"/\">Login</a></p>\r\n                 {/* <hr/>\r\n\r\n                 <p className=\"Link-teach\" onClick={this.product} >Teach on S-help</p>           */}\r\n            </form> \r\n            </div>\r\n        );\r\n\r\n        return (\r\n           <Layout>\r\n                {alertContent}\r\n                \r\n                <div className=\"SideContent\">\r\n                        <MainPage \r\n                        shelp={false}\r\n                        heading1={\"Reset Your\"}\r\n                        heading2={\"Password\"}/>\r\n\r\n                            {form}\r\n                    </div>\r\n        </Layout>\r\n        );\r\n    }\r\n  \r\n}\r\n\r\n\r\nexport default ResetPassword;","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Cart\\Cart.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Teacher\\TeacherPage.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Teacher\\TeacherVideos.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\HomePage\\Preference.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\HomePage\\Homepage.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Teacher\\TeacherHomepage\\TeacherEdit.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Teacher\\TeacherHomepage\\TeacherHomepage.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\CoursePage\\CoursePage.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\Auth\\Forms\\alert.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Cart\\CartCard.js",["199"],"import React,{Component} from 'react';\r\n//import Webdev from '../../../assets/Images/webdev.png';\r\nimport {Link} from 'react-router-dom';\r\nimport './CSS/Cart.css';\r\nimport Rating from '../CoursePage/Rating';\r\nimport axios from '../../../ApiServices/axiosUrl'\r\n//import Alert from '../../../Auth/Forms/alert'\r\n\r\nclass CartCard extends Component{\r\n\r\n\r\n\r\n    state={ alert: {\r\n        valid:false,\r\n        msg:\"\",\r\n        alertType:\" \",\r\n    },\r\n\r\n    // alertPressed:false,\r\n\r\n}\r\n\r\n// AlertError(alertmsg, alertType) {\r\n//     const AlertArray = {...this.state.alert};\r\n//     AlertArray.msg = alertmsg;\r\n//     AlertArray.valid=true;\r\n//     AlertArray.alertType=alertType;\r\n//     this.setState({alert:AlertArray});\r\n\r\n// }\r\n     \r\n\r\n\r\n    render(){\r\n\r\n        // let alertContent = null;\r\n        \r\n      \r\n        // if(this.state.alert.valid){\r\n        //     alertContent = ( <Alert value={this.state.alertPressed} \r\n        //         alertMsg ={this.state.alert.msg} \r\n        //         alertType={this.state.alert.alertType} /> )\r\n        // }\r\n        \r\n        \r\n    \r\n   \r\n    return(\r\n\r\n    <div className=\"CartContent\">\r\n       \r\n\r\n            <div className=\"CardMain \">\r\n\r\n\r\n                <Link className=\"productLink\" to={this.props.Link}>\r\n                    <div className=\"CardImageParent\">\r\n                        <img src={this.props.img} alt=\"course\"/>\r\n                    </div>\r\n                </Link>\r\n\r\n\r\n                    <div className=\"CardSideContent\">\r\n\r\n                            <p class=\"CourseTitle\">{this.props.title}</p>\r\n\r\n                            <div className=\"CardParent1\">\r\n                                <p className=\"CourseTeacher\">By {this.props.teacher}</p>\r\n                                <p onClick={this.props.remove} className=\"CourseRemove\">Remove</p>\r\n                            </div>\r\n                            <Link className=\"productLink\"  to={this.props.Link}>\r\n                                <div className=\"CardParent2\"> \r\n                                  \r\n                                        <span className=\"CourseRating\">{this.props.rating}</span>  \r\n                                        <span className=\"Coursestar\"><Rating rating={this.props.rating}/></span> \r\n                                   \r\n                                  \r\n                                        <p className=\"CourseSave\">Go to Course</p>\r\n                                 \r\n                                </div>   </Link>\r\n\r\n                                \r\n                                <div className=\"CardParent3\">\r\n                                    <p className=\"CoursePrice\">₹ 500</p>\r\n                                    <p className=\"CourseWhishlist\">Move to Whishlist</p>\r\n                                </div>\r\n\r\n                                <div className=\"CourseBuy\"> <p>Buy Now</p></div>\r\n                                \r\n\r\n                    </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n\r\n}}\r\n\r\nexport default CartCard;\r\n","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Cart\\EmptyCart.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Teacher\\TinputFields.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\HomePage\\Recommendation.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\HomePage\\CourseTitle.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Teacher\\TeacherTittle.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Teacher\\CKEditor.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\ApiServices\\axiosUrl.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Teacher\\TeacherHomepage\\TeacherCard.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Teacher\\TeacherHomepage\\TeacherCatergory.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\HomePage\\HomeBanner.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\ApiServices\\auth.service.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Buttons\\SumbitButton.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Spinners\\SpinnerButton.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Input\\FormInput.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\MainPage\\MainPage.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\CoursePage\\CourseVideo.js",["200"],"import React, {Component} from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport './CSS/CoursePage.css';\r\n\r\n\r\n\r\nclass CourseVideo extends Component {\r\n\r\n  state={\r\n    progress:0,\r\n    duration:0,\r\n    videoCompleted:this.props.videoUrl,\r\n  }\r\n\r\n  HandleProgress=(state)=>{\r\n  \r\n    let progress =( (state.playedSeconds/this.state.duration)*100);\r\n\r\n    if(progress==0){\r\n      this.props.videoDuration(this.state.duration,this.props.index);\r\n    }\r\n\r\n    if(progress >=80){\r\n      this.props.videoCompleted(this.props.index);\r\n  \r\n    }\r\n    this.setState({progress:progress})\r\n  \r\n  }\r\n\r\n  HandleDuration = (state)=> {\r\n\r\n    this.setState({duration:state})\r\n  }\r\n\r\n    render () {\r\n      return (\r\n      \r\n        <div className='player-wrapper'> \r\n\r\n        <ReactPlayer \r\n        className='react-player'\r\n        width='100%'\r\n         height='100%'\r\n         controls={true}\r\n         onProgress={this.HandleProgress}\r\n         onDuration={this.HandleDuration}\r\n         playing={this.props.playing}\r\n        url={\"https://shelp-webapp.herokuapp.com/\"+this.props.videoUrl.videoUrl} />\r\n       \r\n        {/* <div className=\"mt-5\">\r\n        <ProgressBar now={this.state.progress} />\r\n        </div>\r\n         */}\r\n        </div>\r\n       \r\n      )\r\n    }\r\n  }\r\n\r\nexport default CourseVideo;","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\CoursePage\\CourseDesc.js",["201"],"import React,{Component} from 'react';\r\nimport './CSS/CourseDesc.css';\r\nimport Rating from './Rating';\r\nimport AuthServices from '../../../ApiServices/auth.service';\r\n\r\n\r\n\r\nclass CourseDesc extends Component {\r\n\r\n\r\n    state ={\r\n        bookmarked:false,\r\n        CourseId:this.props.CourseId,\r\n    }\r\n\r\n    bookmark=()=> {\r\n\r\n        let user = localStorage.getItem('userId');\r\n        \r\n\r\n        if(!this.state.bookmarked){\r\n\r\n                \r\n            const fd =new FormData();\r\n            const form = {};\r\n\r\n                fd.append('_userID',user);\r\n                fd.append('_id',this.state.CourseId);\r\n                form['_userID']=user;\r\n                form['_id']=this.state.CourseId;\r\n                \r\n              \r\n                AuthServices.BookMark(this.state.CourseId,this.props.CourseName,form)\r\n                .then(response => {\r\n                    console.log(\"BookMarked\",response);\r\n                    if(response.status ===201 || response.status ===200){\r\n                        this.setState({bookmarked:true})\r\n                        \r\n                    }\r\n \r\n                \r\n                \r\n\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.response);\r\n                })\r\n\r\n                    \r\n\r\n                \r\n        }   \r\n        else{\r\n                \r\n                this.setState({bookmarked:false})\r\n                \r\n\r\n            }\r\n\r\n\r\n        } \r\n\r\n        \r\n    DownloadPdf=()=>{\r\n       \r\n        AuthServices.Download(this.state.CourseId)\r\n        .then(response => {\r\n            let path =\"https://shelp-webapp.herokuapp.com/\"+'invoice-' + \r\n            this.state.CourseId + '.pdf';\r\n\r\n         \r\n            window.open(path);\r\n        \r\n        })\r\n        .catch(err=>{\r\n            console.log(err.response)\r\n        })\r\n  \r\n        \r\n    }  \r\n\r\n    \r\n\r\n\r\n     render(){\r\n         \r\n\r\n            let classArray = [\"\"];\r\n\r\n            if(this.state.bookmarked) {\r\n                classArray = [\"bookmarked-color\",\"fa fa-bookmark\"]\r\n            }\r\n            else{\r\n                classArray= [\"fa fa-bookmark-o\"]\r\n            }\r\n\r\n        return(\r\n\r\n            <div className=\"\">\r\n\r\n                <p className=\"Course-title-main\">{this.props.title}</p>\r\n                \r\n                <div className=\"Course-Rating-section\">\r\n                    <p>{this.props.rating}</p>\r\n                    <div className=\"RatingStars\"><Rating rating={this.props.rating}\r\n                     specialrating={true} \r\n                    CourseId={this.props.CourseId}/></div>\r\n                    <p className=\"ratingtimesUpdated\"> ( {this.props.ratingtimesUpdated} ratings )</p>\r\n\r\n                </div>\r\n\r\n                <div className=\"break1\">\r\n\r\n                </div>\r\n\r\n                <div className=\"Short-Description\">\r\n                    <p>{this.props.short_description}</p>\r\n                </div>\r\n\r\n                <div className=\"break2\">\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"Course-Teacher-bookmark\">\r\n                    <div className=\"Course-teacher-name\">\r\n                    <p>Created at {this.props.createdat}</p>\r\n                        <h2>By {this.props.teacher}</h2>\r\n                    </div>\r\n\r\n                <div className=\"flex-row\">\r\n                        <div onClick={this.DownloadPdf} className=\"play-btn\">\r\n                        <i class=\"fa fa-download\" aria-hidden=\"true\"></i>\r\n                            <p>Resources</p>\r\n                            \r\n                        </div>\r\n\r\n                        <div className=\"Bookmarkbtn\">\r\n                        <i onClick={this.bookmark} \r\n                         className={classArray.join(' ')} aria-hidden=\"true\"></i>\r\n                            <p>BookMark</p>                     \r\n                        </div>\r\n                </div>\r\n\r\n                    \r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    \r\n  }}\r\n\r\nexport default CourseDesc;\r\n","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Logo\\google.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\CoursePage\\VideoList.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\HomePage\\CourseCards.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\HomePage\\HomeProgressCourse.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\HomePage\\Categories.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\CoursePage\\Rating.js",[],"C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Navigation\\Navbar\\Navbar.js",["202"],"import React, {Component} from 'react';\r\nimport './Navbar.css';\r\nimport {NavLink,Redirect} from 'react-router-dom';\r\nimport Logo from '../../../UI/Logo/Logo';\r\nimport AuthServices from '../../../../ApiServices/auth.service';\r\n\r\nclass Navbar extends Component {\r\n    \r\n    state = {\r\n        isLoggedIn:false,\r\n        userName:\"Profile\",\r\n        redirect:null,\r\n    }\r\n\r\n    componentDidMount(){\r\n        let userToken = AuthServices.getCurrentUser();\r\n        let userName= AuthServices.getUserName();\r\n        if(userToken!==null){\r\n            this.setState({isLoggedIn:true,userName:userName});\r\n         \r\n        }\r\n\r\n    \r\n        \r\n     }\r\n\r\n     logout=() => {\r\n       this.setState({redirect:\"/login\"})\r\n        AuthServices.logout();\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n\r\n\r\n       if (this.state.redirect) {\r\n            return <Redirect to=\"/login\" />\r\n        }\r\n\r\n      \r\n        let LoginLinks = ( <ul className=\"navbar-nav ml-auto\">\r\n\r\n\r\n        <li className=\"nav-item\" data-toggle=\"tooltip\" data-placement=\"top\"\r\n         title=\"Create Your Course\">\r\n          \r\n          <NavLink to=\"/teacherhome\" activeClassName=\"teacherActive\"\r\n           className=\"nav-link teachLink\">Teach on Shelp</NavLink>\r\n        </li>\r\n      \r\n       \r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"/Cart\" className=\"nav-link \"> \r\n          <i data-toggle=\"tooltip\" data-placement=\"top\" title=\"Bookmarked Courses\"\r\n           className=\"fa fa-heart\" aria-hidden=\"true\"><span id=\"bookmarkNav\"> Bookmarked</span></i></NavLink>\r\n         \r\n        </li>\r\n       \r\n       {/* <li className='nav-item '>\r\n        <NavLink to=\"/\"  \r\n        className=\"nav-link profileName\">\r\n              {this.state.userName}</NavLink>\r\n        </li> */}\r\n\r\n\r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"/\" className=\"nav-link logoutlink\" onClick={this.logout}>Logout</NavLink>\r\n         \r\n        </li>\r\n      </ul>\r\n      );\r\n\r\n      if(localStorage.getItem('user') === null){\r\n\r\n        LoginLinks =( <ul className=\"navbar-nav ml-auto\">\r\n\r\n               \r\n\r\n                <li className=\"nav-item\">\r\n                \r\n                <NavLink to=\"/signup\" activeClassName=\"btnactive\" className=\"nav-link Signupbtn\">Signup</NavLink>\r\n                \r\n                </li>\r\n            \r\n                <li className=\"nav-item\">\r\n                <NavLink to=\"/login\" activeClassName=\"btnactive\" className=\"nav-link Loginbtn\">Login</NavLink>\r\n                \r\n                </li>\r\n\r\n                \r\n               \r\n      </ul>\r\n        )}\r\n\r\n       \r\n    return(\r\n  \r\n\r\n<nav className=\" navbar navbar-expand-lg sticky-top \">\r\n\r\n  <NavLink to=\"/home/all\" className=\"navbar-brand\"><Logo/></NavLink>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" \r\n  data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\r\n   aria-label=\"Toggle navigation\">\r\n  <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\r\n    <ul className=\"navbar-nav mr-auto\">\r\n\r\n    <li className=\"nav-item dropdown\" >\r\n            <a className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            Category\r\n            </a>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n\r\n                  <NavLink  className=\"dropdown-item\" to='/home/all' activeClassName=\"active-categoryMenu\" >All Courses</NavLink>\r\n                   <NavLink className=\"dropdown-item\" to='/home/Web Development' activeClassName=\"active-categoryMenu\">Web Development </NavLink>\r\n                   <NavLink className=\"dropdown-item\" to='/home/Web Designing' activeClassName=\"active-categoryMenu\" >Web Designing </NavLink>\r\n                   <NavLink className=\"dropdown-item\" to='/home/React' activeClassName=\"active-categoryMenu\">React</NavLink>\r\n                    <NavLink className=\"dropdown-item\" to='/home/NodeJs' activeClassName=\"active-categoryMenu\">NodeJs</NavLink>\r\n                   <NavLink className=\"dropdown-item\" to='/home/ML' activeClassName=\"active-categoryMenu\">Machine Learning </NavLink>\r\n                   <NavLink className=\"dropdown-item\" to='/home/Photography' activeClassName=\"active-categoryMenu\">Photography</NavLink>\r\n                   <NavLink className=\"dropdown-item\" to='/home/IOT' activeClassName=\"active-categoryMenu\">IOT </NavLink>\r\n\r\n\r\n           \r\n            </div>\r\n        </li>\r\n    </ul>\r\n    <form class=\"form-inline my-2 my-lg-0\">\r\n      <input class=\"form-control mr-sm-2\" type=\"search\" \r\n      placeholder=\"Search Courses\" aria-label=\"Search\"/>\r\n      <button class=\"btn btn-outline-primary my-2 my-sm-0\" type=\"submit\">Search</button>\r\n    </form>\r\n\r\n    {LoginLinks}\r\n    \r\n  </div>\r\n</nav>\r\n\r\n)}\r\n};\r\n\r\nexport default Navbar;","C:\\Users\\admin\\Desktop\\ITSS_Nihongo\\Final\\Front-end\\src\\components\\UI\\Logo\\Logo.js",[],{"ruleId":"203","severity":1,"message":"204","line":30,"column":36,"nodeType":"205","messageId":"206","endLine":30,"endColumn":37,"suggestions":"207"},{"ruleId":"208","severity":1,"message":"209","line":272,"column":43,"nodeType":"210","messageId":"211","endLine":272,"endColumn":57},{"ruleId":"212","severity":1,"message":"213","line":10,"column":8,"nodeType":"214","messageId":"215","endLine":10,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":30,"column":36,"nodeType":"205","messageId":"206","endLine":30,"endColumn":37,"suggestions":"216"},{"ruleId":"212","severity":1,"message":"217","line":208,"column":5,"nodeType":"214","messageId":"215","endLine":208,"endColumn":10},{"ruleId":"203","severity":1,"message":"204","line":49,"column":40,"nodeType":"205","messageId":"206","endLine":49,"endColumn":41,"suggestions":"218"},{"ruleId":"208","severity":1,"message":"209","line":340,"column":47,"nodeType":"210","messageId":"211","endLine":340,"endColumn":61},{"ruleId":"203","severity":1,"message":"204","line":31,"column":40,"nodeType":"205","messageId":"206","endLine":31,"endColumn":41,"suggestions":"219"},{"ruleId":"212","severity":1,"message":"217","line":269,"column":9,"nodeType":"214","messageId":"215","endLine":269,"endColumn":14},{"ruleId":"212","severity":1,"message":"220","line":6,"column":8,"nodeType":"214","messageId":"215","endLine":6,"endColumn":13},{"ruleId":"221","severity":1,"message":"222","line":19,"column":16,"nodeType":"223","messageId":"224","endLine":19,"endColumn":18},{"ruleId":"225","severity":1,"message":"226","line":68,"column":60,"nodeType":"223","messageId":"227","endLine":68,"endColumn":61},{"ruleId":"228","severity":1,"message":"229","line":116,"column":13,"nodeType":"210","endLine":116,"endColumn":153},"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["230","231"],"react/jsx-pascal-case","Imported JSX component Google_logo must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","no-unused-vars","'Google_logo' is defined but never used.","Identifier","unusedVar",["232","233"],"'value' is assigned a value but never used.",["234","235"],["236","237"],"'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"messageId":"238","fix":"239","desc":"240"},{"messageId":"241","fix":"242","desc":"243"},{"messageId":"238","fix":"244","desc":"240"},{"messageId":"241","fix":"245","desc":"243"},{"messageId":"238","fix":"246","desc":"240"},{"messageId":"241","fix":"247","desc":"243"},{"messageId":"238","fix":"248","desc":"240"},{"messageId":"241","fix":"249","desc":"243"},"removeEscape",{"range":"250","text":"251"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"252","text":"253"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"254","text":"251"},{"range":"255","text":"253"},{"range":"256","text":"251"},{"range":"257","text":"253"},{"range":"258","text":"251"},{"range":"259","text":"253"},[1055,1056],"",[1055,1055],"\\",[1061,1062],[1061,1061],[1587,1588],[1587,1587],[1079,1080],[1079,1079]]